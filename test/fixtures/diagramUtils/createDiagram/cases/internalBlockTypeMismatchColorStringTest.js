const test = {
  it: 'create diagram fror block (touching color (answer)?): test for internal block type mismatch, expected color but got string',
  args: [
    {
      svgGroup_: { id: '' },
      svgPath_: { id: '' },
      rendered: true,
      useDragSurface_: true,
      id: 'f]ZonYl{wt_R9eZ`OH98',
      outputConnection: {},
      nextConnection: null,
      previousConnection: null,
      inputList: [
        {
          type: 1,
          name: 'COLOR',
          sourceBlock_: { id: 'f]ZonYl{wt_R9eZ`OH98' },
          connection: {
            sourceBlock_: { id: 'f]ZonYl{wt_R9eZ`OH98' },
            type: 1,
            db_: {},
            dbOpposite_: {},
            hidden_: false,
            offsetInBlock_: {},
            shadowDom_: { id: '8:qqo:1dGI2|QM-IA)-I' },
            targetConnection: {
              sourceBlock_: {
                svgGroup_: { id: '' },
                svgPath_: { id: '' },
                rendered: true,
                useDragSurface_: true,
                id: '9yMJXlkGBh(cJ:@!dzUm',
                outputConnection: {},
                nextConnection: null,
                previousConnection: null,
                inputList: [
                  {
                    type: 5,
                    name: '',
                    sourceBlock_: { id: '9yMJXlkGBh(cJ:@!dzUm' },
                    connection: null,
                    fieldRow: [
                      {
                        size_: {},
                        text_: 'answer',
                        sourceBlock_: { id: '9yMJXlkGBh(cJ:@!dzUm' },
                        textElement_: { id: '' },
                        arrowWidth_: 0,
                        renderWidth: 51.578125,
                        renderSep: 0,
                      },
                    ],
                    outlinePath: null,
                    renderHeight: 40,
                    renderWidth: 0,
                    fieldWidth: 51.578125,
                  },
                ],
                inputsInline: true,
                disabled: false,
                tooltip: '',
                contextMenu: true,
                parentBlock_: { id: 'f]ZonYl{wt_R9eZ`OH98' },
                childBlocks_: {},
                deletable_: true,
                movable_: true,
                editable_: true,
                isShadow_: false,
                collapsed_: false,
                checkboxInFlyout_: true,
                comment: null,
                outputShape_: 2,
                category_: 'sensing',
                xy_: {},
                workspace: { id: '50},9HT,|=$23`5dEuiR' },
                isInFlyout: false,
                isInMutator: false,
                RTL: false,
                isInsertionMarker_: false,
                type: 'sensing_answer',
                colour_: '#5CB1D6',
                colourSecondary_: '#47A8D1',
                colourTertiary_: '#2E8EB8',
                inputsInlineDefault: true,
                eventsInit_: true,
                startHat_: false,
                squareTopLeftCorner_: true,
                edgeShapeWidth_: 20,
                edgeShape_: 2,
                width: 75.578125,
                height: 40,
              },
              type: 2,
              db_: {},
              dbOpposite_: {},
              hidden_: false,
              offsetInBlock_: {},
              check_: {},
              x_: 181.08796494095412,
              y_: 1707.2074126138077,
              inDB_: true,
              targetConnection: {},
            },
            x_: 181.08796494095412,
            y_: 1707.2074126138077,
            inDB_: true,
          },
          fieldRow: [
            {
              size_: {},
              text_: 'touching color',
              sourceBlock_: { id: 'f]ZonYl{wt_R9eZ`OH98' },
              textElement_: { id: '' },
              arrowWidth_: 0,
              renderWidth: 99.60648345947266,
              renderSep: 0,
            },
          ],
          outlinePath: { id: '' },
          renderHeight: 48,
          renderWidth: 75.578125,
          fieldWidth: 99.60648345947266,
        },
        {
          type: 5,
          name: '',
          sourceBlock_: { id: 'f]ZonYl{wt_R9eZ`OH98' },
          connection: null,
          fieldRow: [
            {
              size_: {},
              text_: '?',
              sourceBlock_: { id: 'f]ZonYl{wt_R9eZ`OH98' },
              textElement_: { id: '' },
              arrowWidth_: 0,
              renderWidth: 8.912036895751953,
              renderSep: 0,
            },
          ],
          outlinePath: null,
          renderHeight: 40,
          renderWidth: 0,
          fieldWidth: 8.912036895751953,
        },
      ],
      inputsInline: true,
      disabled: false,
      tooltip: '',
      contextMenu: true,
      parentBlock_: null,
      childBlocks_: {},
      deletable_: true,
      movable_: true,
      editable_: true,
      isShadow_: false,
      collapsed_: false,
      checkboxInFlyout_: false,
      comment: null,
      outputShape_: 1,
      category_: 'sensing',
      xy_: {},
      workspace: { id: '50},9HT,|=$23`5dEuiR' },
      isInFlyout: false,
      isInMutator: false,
      RTL: false,
      isInsertionMarker_: false,
      type: 'sensing_touchingcolor',
      colour_: '#5CB1D6',
      colourSecondary_: '#47A8D1',
      colourTertiary_: '#2E8EB8',
      inputsInlineDefault: true,
      eventsInit_: true,
      startHat_: false,
      squareTopLeftCorner_: true,
      edgeShapeWidth_: 24,
      edgeShape_: 1,
      width: 240.0966453552246,
      height: 48,
      isGlowingStack_: false,
    },
    {
      topBlock: 'f]ZonYl{wt_R9eZ`OH98',
      stack: {},
      stackFrames: {},
      status: 4,
      isKilled: false,
      target: { id: '8ytl}PP_?_}Ek+V6qMm!' },
      blockContainer: {
        _cache: {
          _executeCached: {
            '9yMJXlkGBh(cJ:@!dzUm': {
              id: '9yMJXlkGBh(cJ:@!dzUm',
              opcode: 'sensing_answer',
              fields: {},
              inputs: {},
              _profiler: null,
              _profilerFrame: null,
              _isHat: false,
              _definedBlockFunction: true,
              _isShadowBlock: false,
              _shadowValue: false,
              _fields: {},
              _inputs: {},
              _argValues: {},
              _parentKey: 'COLOR',
              _parentValues: { COLOR: '' },
              _ops: {},
            },
            'f]ZonYl{wt_R9eZ`OH98': {
              id: 'f]ZonYl{wt_R9eZ`OH98',
              opcode: 'sensing_touchingcolor',
              fields: {},
              inputs: {},
              _profiler: null,
              _profilerFrame: null,
              _isHat: false,
              _definedBlockFunction: true,
              _isShadowBlock: false,
              _shadowValue: false,
              _fields: {},
              _inputs: {},
              _argValues: {},
              _parentKey: null,
              _parentValues: null,
              _ops: {},
            },
          },
        },
      },
      requestScriptGlowInFrame: true,
      blockGlowInFrame: 'f]ZonYl{wt_R9eZ`OH98',
      warpTimer: null,
      justReported: false,
      stackClick: false,
      updateMonitor: false,
    },
  ],
  expected: [
    {
      nodes: [
        {
          nodePlug: { valA: 1, valB: 0 },
          content: [{ content: 'answer' }],
          type: 'String',
          value: '',
        },
        {
          nodePlug: { valA: 0, valB: 0 },
          content: [
            { content: 'touching color ' },
            { valA: 0, valB: 1, type: 'Colour' },
            { content: '?' },
          ],
          type: 'Boolean',
          value: 'false',
        },
      ],
      edges: [
        {
          plugA: { valA: 0, valB: 1, type: 'Colour' },
          plugB: { valA: 1, valB: 0 },
          isHighlighted: true,
        },
      ],
      root: {
        nodePlug: { valA: 0, valB: 0 },
        content: [
          { content: 'touching color ' },
          { valA: 0, valB: 1, type: 'Colour' },
          { content: '?' },
        ],
        type: 'Boolean',
        value: 'false',
      },
    },
    [2, 2],
  ],
};

export default test;
