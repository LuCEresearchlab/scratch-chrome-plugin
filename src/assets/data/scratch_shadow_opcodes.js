export const shadowOpcodes = [
  'event_broadcast_menu',
  'looks_backdrops',
  'looks_costume',
  'math_angle',
  'math_integer',
  'math_number',
  'motion_glideto_menu',
  'motion_goto_menu',
  'motion_pointtowards_menu',
  'sound_sounds_menu',
  'text',
  'colour_picker',
  'control_create_clone_of_menu',
  'math_positive_number',
  'math_whole_number',
  'sensing_distancetomenu',
  'sensing_keyoptions',
  'sensing_of_object_menu',
  'sensing_touchingobjectmenu',
  'music_menu_DRUM',
  'music_menu_INSTRUMENT',
  'note',
  'pen_menu_colorParam',
  'text2speech_menu_languages',
  'text2speech_menu_voices',
  'videoSensing_menu_ATTRIBUTE',
  'videoSensing_menu_SUBJECT',
  'videoSensing_menu_VIDEO_STATE',
  'boost_menu_COLOR',
  'boost_menu_MOTOR_DIRECTION',
  'boost_menu_MOTOR_ID',
  'boost_menu_MOTOR_REPORTER_ID',
  'boost_menu_TILT_DIRECTION',
  'boost_menu_TILT_DIRECTION_ANY',
  'ev3_menu_sensorPorts',
  'ev3_menu_motorPorts',
  'gdxfor_menu_axisOptions',
  'gdxfor_menu_gestureOptions',
  'gdxfor_menu_pushPullOptions',
  'gdxfor_menu_tiltAnyOptions',
  'gdxfor_menu_tiltOptions',
  'makeymakey_menu_KEY',
  'makeymakey_menu_SEQUENCE',
  'matrix',
  'microbit_menu_buttons',
  'microbit_menu_gestures',
  'microbit_menu_tiltDirection',
  'microbit_menu_tiltDirectionAny',
  'microbit_menu_touchPins',
  'translate_menu_languages',
  'wedo2_menu_MOTOR_DIRECTION',
  'wedo2_menu_MOTOR_ID',
  'wedo2_menu_OP',
  'wedo2_menu_TILT_DIRECTION',
  'wedo2_menu_TILT_DIRECTION_ANY',
];

export const pseudoShadowOpcodes = [
  'argument_reporter_string_number',
  'argument_reporter_boolean',
];

// info from scratch-blocks
export const opcodeToShadowOpcode = {
  sensing_touchingobject: ['sensing_touchingobjectmenu'],
  sensing_touchingcolor: ['colour_picker'],
  sensing_of: ['sensing_of_object_menu'],
  sensing_keypressed: ['sensing_keyoptions'],
  sensing_distanceto: ['sensing_distancetomenu'],
  sensing_coloristouchingcolor: ['colour_picker', 'colour_picker'],
  operator_mathop: ['math_number'],
  operator_round: ['math_number'],
  operator_add: ['math_number', 'math_number'],
  operator_subtract: ['math_number', 'math_number'],
  operator_divide: ['math_number', 'math_number'],
  operator_multiply: ['math_number', 'math_number'],
  operator_mod: ['math_number', 'math_number'],
  operator_random: ['math_number', 'math_number'],
  operator_gt: ['text', 'text'],
  operator_lt: ['text', 'text'],
  operator_equals: ['text', 'text'],
  operator_and: ['', ''],
  operator_or: ['', ''],
  operator_not: [''],
  operator_join: ['text', 'text'],
  operator_letter_of: ['math_whole_number', 'text'],
  operator_length: ['text'],
  operator_contains: ['text', 'text'],
  data_listcontainsitem: ['text'],
  data_itemoflist: ['math_integer'],
  data_itemnumoflist: ['text'],
  videoSensing_videoOn: ['videoSensing_menu_ATTRIBUTE', 'videoSensing_menu_SUBJECT'],
  translate_getTranslate: ['text', 'translate_menu_languages'],
  microbit_isTilted: ['microbit_menu_tiltDirectionAny'],
  microbit_isButtonPressed: ['microbit_menu_buttons'],
  microbit_getTiltAngle: ['microbit_menu_tiltDirection'],
  ev3_getMotorPosition: ['ev3_menu_motorPorts'],
  ev3_buttonPressed: ['ev3_menu_sensorPorts'],
  boost_getMotorPosition: ['boost_menu_MOTOR_REPORTER_ID'],
  boost_getTiltAngle: ['boost_menu_TILT_DIRECTION'],
  boost_seeingColor: ['boost_menu_COLOR'],
  wedo2_isTilted: ['wedo2_menu_TILT_DIRECTION_ANY'],
  wedo2_getTiltAngle: ['wedo2_menu_TILT_DIRECTION'],
  gdxfor_getAcceleration: ['gdxfor_menu_axisOptions'],
  gdxfor_isTilted: ['gdxfor_menu_tiltAnyOptions'],
  gdxfor_getTilt: ['gdxfor_menu_tiltOptions'],
  gdxfor_getSpinSpeed: ['gdxfor_menu_axisOptions'],
};
